# Generated by Django 3.1.1 on 2021-03-12 15:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import openwisp_firmware_upgrader.base.models
import openwisp_users.mixins
import private_storage.fields
import private_storage.storage.files
import uuid
import swapper
from openwisp_firmware_upgrader.hardware import FIRMWARE_IMAGE_TYPE_CHOICES
from openwisp_firmware_upgrader.settings import FIRMWARE_API_BASEURL, IMAGE_URL_PATH
from urllib.parse import urljoin


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.CONFIG_DEVICE_MODEL),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BatchUpgradeOperation',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    'created',
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name='created',
                    ),
                ),
                (
                    'modified',
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name='modified',
                    ),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('idle', 'idle'),
                            ('in-progress', 'in progress'),
                            ('success', 'completed successfully'),
                            ('failed', 'completed with some failures'),
                        ],
                        default='idle',
                        max_length=12,
                    ),
                ),
                ('details', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'verbose_name': 'Mass upgrade operation',
                'verbose_name_plural': 'Mass upgrade operations',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Build',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    'created',
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name='created',
                    ),
                ),
                (
                    'modified',
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name='modified',
                    ),
                ),
                ('version', models.CharField(db_index=True, max_length=32)),
                (
                    'os',
                    models.CharField(
                        blank=True,
                        help_text='OS identifier as presented by the device, used to automatically recognize the firmware image used by new devices that register into the system',
                        max_length=64,
                        null=True,
                        verbose_name='OS identifier',
                    ),
                ),
                (
                    'changelog',
                    models.TextField(
                        blank=True,
                        help_text='descriptive text indicating what has changed since the previous version, if applicable',
                        verbose_name='change log',
                    ),
                ),
                ('details', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'verbose_name': 'Firmware Build',
                'verbose_name_plural': 'Firmware Builds',
                'ordering': ('-created',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FirmwareImage',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    'created',
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name='created',
                    ),
                ),
                (
                    'modified',
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name='modified',
                    ),
                ),
                (
                    'file',
                    private_storage.fields.PrivateFileField(
                        storage=private_storage.storage.files.PrivateFileSystemStorage(
                            base_url=urljoin(FIRMWARE_API_BASEURL, IMAGE_URL_PATH),
                        ),
                        upload_to=openwisp_firmware_upgrader.base.models.get_build_directory,
                        verbose_name='File',
                    ),
                ),
                (
                    'type',
                    models.CharField(
                        blank=True,
                        choices=FIRMWARE_IMAGE_TYPE_CHOICES,
                        help_text='firmware image type: model or architecture. Leave blank to attempt determining automatically',
                        max_length=128,
                    ),
                ),
                ('details', models.CharField(blank=True, max_length=64, null=True)),
                (
                    'build',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=swapper.get_model_name('firmware_upgrader', 'Build'),
                    ),
                ),
            ],
            options={
                'verbose_name': 'Firmware Image',
                'verbose_name_plural': 'Firmware Images',
                'abstract': False,
                'unique_together': {('build', 'type')},
            },
        ),
        migrations.CreateModel(
            name='UpgradeOperation',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    'created',
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name='created',
                    ),
                ),
                (
                    'modified',
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name='modified',
                    ),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('in-progress', 'in progress'),
                            ('success', 'success'),
                            ('failed', 'failed'),
                            ('aborted', 'aborted'),
                        ],
                        default='in-progress',
                        max_length=12,
                    ),
                ),
                ('log', models.TextField(blank=True)),
                ('details', models.CharField(blank=True, max_length=64, null=True)),
                (
                    'batch',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=swapper.get_model_name(
                            'firmware_upgrader', 'BatchUpgradeOperation'
                        ),
                    ),
                ),
                (
                    'device',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=swapper.get_model_name('config', 'Device'),
                    ),
                ),
                (
                    'image',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=swapper.get_model_name('firmware_upgrader', 'FirmwareImage'),
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceFirmware',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    'created',
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name='created',
                    ),
                ),
                (
                    'modified',
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name='modified',
                    ),
                ),
                ('installed', models.BooleanField(default=False)),
                ('details', models.CharField(blank=True, max_length=64, null=True)),
                (
                    'device',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=swapper.get_model_name('config', 'Device'),
                    ),
                ),
                (
                    'image',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=swapper.get_model_name('firmware_upgrader', 'FirmwareImage'),
                    ),
                ),
            ],
            options={
                'verbose_name': 'Device Firmware',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    'created',
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name='created',
                    ),
                ),
                (
                    'modified',
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name='modified',
                    ),
                ),
                ('name', models.CharField(db_index=True, max_length=64)),
                ('description', models.TextField(blank=True)),
                ('details', models.CharField(blank=True, max_length=64, null=True)),
                (
                    'organization',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=swapper.get_model_name('openwisp_users', 'Organization'),
                        verbose_name='organization',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Firmware Category',
                'verbose_name_plural': 'Firmware Categories',
                'abstract': False,
                'unique_together': {('name', 'organization')},
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.AddField(
            model_name='build',
            name='category',
            field=models.ForeignKey(
                help_text='if you have different firmware types eg: (BGP routers, wifi APs, DSL gateways) create a category for each.',
                on_delete=django.db.models.deletion.CASCADE,
                to=swapper.get_model_name('firmware_upgrader', 'Category'),
                verbose_name='firmware category',
            ),
        ),
        migrations.AddField(
            model_name='batchupgradeoperation',
            name='build',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=swapper.get_model_name('firmware_upgrader', 'Build'),
            ),
        ),
        migrations.AlterUniqueTogether(
            name='build',
            unique_together={('category', 'version')},
        ),
    ]
